{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","prew","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACjB,IAAMC,EAAOD,EAAUE,UACfA,EAAcV,KAAKW,MAAnBD,UAEJA,IAAcD,GAEhBL,QAAQQ,MAAR,uBAA8BH,EAA9B,eAAyCC,MArB/C,kCAyBE,WACET,OAAOY,cAAcb,KAAKD,WA1B9B,oBA6BE,WACE,OACE,sBACEe,UAAU,QADZ,UAGE,wBAAQA,UAAU,cAAlB,SACGd,KAAKW,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGd,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YAzCtD,GAA2BQ,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAGX,IAAMG,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVZ,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBa,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEmB,UAAU,OAG5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEmB,UAAU,OAG5BrB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEO,UAAWO,QAC1B,QAlBP,oBAqBE,WACE,IAAQK,EAAatB,KAAKJ,MAAlB0B,SAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,UAAWV,KAAKJ,MAAMc,mBA3BlD,GAAyBK,IAAMC,WCP/BW,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.ac55199f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\ntype State = {\n  today: Date,\n};\n\nexport class Clock extends React.Component< Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prew = prevProps.clockName;\n    const { clockName } = this.props;\n\n    if (clockName !== prew) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prew} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"Clock\"\n      >\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}